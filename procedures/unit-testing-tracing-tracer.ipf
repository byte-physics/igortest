#pragma rtGlobals=3
#pragma TextEncoding = "UTF-8"
#pragma rtFunctionErrors=1
#pragma ModuleName=UTF_Tracer

#if (IgorVersion() >= 9.00) && Exists("TUFXOP_Version") && (NumberByKey("BUILD", IgorInfo(0)) >= 38812)

/// @brief Calls to this function are inserted into code where code coverage is logged.
///        These calls are auto generated and contain information about the procedure and line number
///        in the original code. This information is logged into a shared thread storage named "IUTF_Testrun" using the TUFXOP.
///        Optionally multiple consecutive line numbers can be logged at the same time for original code that contains
///        line continuation. Also if conditions are specifically instrumented and the result of the condition expression is
///        given in the optional c parameter. Thus, this function knows if the condition evaluated to true or false and logs
///        this information accordingly.
///        Each local thread storage contains a 3d array where the rows index the procedure lines, the columns the
///        execution count, condition true count, condition false count and the layers the procedure files. In the elements
///        the number of executions are counted.
///        The procedure names corresponding to the procedure file index can be obtained by calling the function
///        GetTracedProcedureNames() that is auto generated by the IUTF.
///        The function UTF_Tracing#AnalyzeTracingResult() evaluates the collected information from the shared thread storage
///        and generates result files.
///
/// @param procNum Index of the procedure. The corresponding procedure name can be obtained by retrieving a text wave from GetTracedProcedureNames(),
///                the element with this index is the associated procedure.
/// @param lineNum line number of the referenced code line in the original code
/// @param c       [optional, default = 0] c is set when the instrumentation finds a code line with an if condition.
///                c is the value of the expression in the if condition.
/// @param l       [optional, default = 1] The number of consecutive original code lines associated with the statement in the original code.
///                A statement in the original code can span multiple lines if line continuation is used.
/// @return returns the value of c
threadsafe Function Z_(variable procNum, variable lineNum[, variable c, variable l])

	variable i, logLines, condition
	variable result, numProcs

	TUFXOP_GetStorage/Z/Q/N="IUTF_Testrun"/TS wv
	if(V_flag)
		return c
	endif

	logLines = ParamIsDefault(l) ? 1 : l
	condition = !ParamIsDefault(c)
	if(condition && numType(c) != 2)
		result = !!c
	endif

	WAVE/WAVE wref = wv
	WAVE/D/Z logData = wref[0]
	if(!WaveExists(logData))
		WAVE/T wProcNames = GetTracedProcedureNames()
		numProcs = DimSize(wProcNames, UTF_ROW)
		Make/FREE/D/N=(UTF_MAX_PROC_LINES, 3, numProcs) logData
		wref[0] = logData
	endif

	for(i = 0; i < logLines; i += 1)
		logData[lineNum + i][0][procNum] += 1
	endfor

	if(condition)
		for(i = 0; i < logLines; i += 1)
			logData[lineNum + i][result + 1][procNum] += 1
		endfor
	endif

	return c
End
#endif
