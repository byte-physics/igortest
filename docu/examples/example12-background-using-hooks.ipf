#pragma rtGlobals=3
#pragma TextEncoding="UTF-8"
#pragma version=1.09
#pragma ModuleName=Example12

#include "unit-testing"

// A task that is run by the test, could be data acquisition
// but to keep it simple this task runs until the current seconds
// are dividable by 5 with a remainder of 0
static Function ReEntryTask(s)
	STRUCT WMBackgroundStruct &s

	return !mod(trunc(datetime), 5)
End

static Function TEST_CASE_BEGIN_OVERRIDE(name)
	string name

	printf ">> Registration of task monitoring in test case begin hook <<\r"

	CtrlNamedBackGround testtask, proc=Example12#ReEntryTask, period=1, start
	RegisterUTFMonitor("testtask", 1, "TestCase_reentry")
End

// A test case that shows output generated by a warning.
// The test case begin hook above is called before this function runs.
// So there is already a reentry function registered that continues execution
// of this test case later.
Function MonitorInHookTest()

	string infoText = "Entering example test case"
	string badComparison = "in MonitorInHookTest()"
	// the warning will generate output to history
	WARN_EQUAL_STR(infoText, badComparison)
End

// The registered reentry function from the test case begin hook.
// Here continues the MonitorInHookTest test case after ReEntryTask finished.
// We generate some history output with a warning.
Function TestCase_reentry()

	string infoText = "Continuing example test case in reentry function..."
	string badComparison = "in TestCase_reentry()"
	// the warning will generate output to history
	WARN_EQUAL_STR(infoText, badComparison)
End
